@using App.Models
@model IEnumerable<ReportTemplate>
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Report Templates";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Report Templates</h2>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Create New Template
        </a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Format</th>
                            <th>Time Range</th>
                            <th>Scheduled</th>
                            <th>Last Generated</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var template in Model)
                        {
                            <tr>
                                <td>@template.Name</td>
                                <td>@template.Format</td>
                                <td>
                                    @if (template.TimeRangeType == "Custom")
                                    {
                                        @($"Custom ({template.CustomDays} days)")
                                    }
                                    else
                                    {
                                        @template.TimeRangeType
                                    }
                                </td>
                                <td>
                                    @if (template.IsScheduled)
                                    {
                                        <span class="badge bg-success">Yes</span>
                                        <small class="text-muted">@template.Schedule</small>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">No</span>
                                    }
                                </td>
                                <td>
                                    @if (template.LastGeneratedAt.HasValue)
                                    {
                                        @template.LastGeneratedAt.Value.ToString("g")
                                    }
                                    else
                                    {
                                        <span class="text-muted">Never</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-sm btn-primary" onclick="generateReport(@template.Id)">
                                            <i class="fas fa-file-export"></i> Generate
                                        </button>
                                        <a asp-action="Preview" asp-route-id="@template.Id" class="btn btn-sm btn-info">
                                            <i class="fas fa-eye"></i> Preview
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@template.Id" class="btn btn-sm btn-warning">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <a asp-action="Duplicate" asp-route-id="@template.Id" class="btn btn-sm btn-success">
                                            <i class="fas fa-copy"></i> Duplicate
                                        </a>
                                        <button type="button" class="btn btn-sm btn-danger" onclick="deleteTemplate(@template.Id)">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Date Range Modal -->
<div class="modal fade" id="dateRangeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Date Range</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" class="form-control" id="startDate">
                </div>
                <div class="mb-3">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" class="form-control" id="endDate">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="confirmGenerateReport()">Generate Report</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentTemplateId = null;

        function generateReport(templateId) {
            currentTemplateId = templateId;
            const modal = new bootstrap.Modal(document.getElementById('dateRangeModal'));
            modal.show();
        }

        async function confirmGenerateReport() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            try {
                const response = await fetch('/Admin/ReportTemplates/GenerateReport/' + currentTemplateId, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ startDate, endDate })
                });

                if (response.ok) {
                    const contentType = response.headers.get('content-type');
                    if (contentType && contentType.includes('application/json')) {
                        const result = await response.json();
                        if (result.success) {
                            toastr.success(result.message);
                        }
                    } else {
                        // Handle file download
                        const blob = await response.blob();
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = response.headers.get('content-disposition').split('filename=')[1];
                        document.body.appendChild(a);
                        a.click();
                        window.URL.revokeObjectURL(url);
                        a.remove();
                    }
                } else {
                    toastr.error('Failed to generate report');
                }
            } catch (error) {
                console.error('Error generating report:', error);
                toastr.error('An error occurred while generating the report');
            }

            const modal = bootstrap.Modal.getInstance(document.getElementById('dateRangeModal'));
            modal.hide();
        }

        function deleteTemplate(id) {
            if (confirm('Are you sure you want to delete this template?')) {
                document.getElementById('deleteForm_' + id).submit();
            }
        }

        // Initialize date inputs with current date range
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date();
            const lastWeek = new Date(today.getTime() - (7 * 24 * 60 * 60 * 1000));
            
            document.getElementById('startDate').value = lastWeek.toISOString().split('T')[0];
            document.getElementById('endDate').value = today.toISOString().split('T')[0];
        });
    </script>

    @foreach (var template in Model)
    {
        <form id="deleteForm_@template.Id" asp-action="Delete" asp-route-id="@template.Id" method="post">
            @Html.AntiForgeryToken()
        </form>
    }
}