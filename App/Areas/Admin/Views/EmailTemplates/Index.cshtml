@using App.Areas.Admin.Controllers
@using App.Models.FilterModels
@model TemplateListViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Email Templates";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Email Templates</h2>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Create New Template
        </a>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h5 class="card-title mb-0">Search & Filter</h5>
        </div>
        <div class="card-body">
            <form method="get" id="filterForm" class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Search</label>
                    <input type="text" name="SearchTerm" class="form-control" 
                           value="@Model.Filter.SearchTerm" 
                           placeholder="Search by name, subject, or description...">
                </div>
                
                <div class="col-md-2">
                    <label class="form-label">Status</label>
                    <select name="IsDefault" class="form-select">
                        <option value="">All Templates</option>
                        <option value="true" @(Model.Filter.IsDefault == true ? "selected" : "")>Default Only</option>
                        <option value="false" @(Model.Filter.IsDefault == false ? "selected" : "")>Regular Only</option>
                    </select>
                </div>

                <div class="col-md-2">
                    <label class="form-label">Sort By</label>
                    <select name="SortBy" class="form-select">
                        <option value="@TemplateFilterModel.SortOptions.Name" 
                                @(Model.Filter.SortBy == TemplateFilterModel.SortOptions.Name ? "selected" : "")>
                            Name
                        </option>
                        <option value="@TemplateFilterModel.SortOptions.CreatedAt"
                                @(Model.Filter.SortBy == TemplateFilterModel.SortOptions.CreatedAt ? "selected" : "")>
                            Created Date
                        </option>
                        <option value="@TemplateFilterModel.SortOptions.LastModified"
                                @(Model.Filter.SortBy == TemplateFilterModel.SortOptions.LastModified ? "selected" : "")>
                            Last Modified
                        </option>
                    </select>
                </div>

                <div class="col-md-2">
                    <label class="form-label">Sort Direction</label>
                    <select name="SortDescending" class="form-select">
                        <option value="false" @(!Model.Filter.SortDescending ? "selected" : "")>Ascending</option>
                        <option value="true" @(Model.Filter.SortDescending ? "selected" : "")>Descending</option>
                    </select>
                </div>

                <div class="col-md-2">
                    <label class="form-label">Page Size</label>
                    <select name="PageSize" class="form-select">
                        <option value="10" @(Model.Filter.PageSize == 10 ? "selected" : "")>10</option>
                        <option value="25" @(Model.Filter.PageSize == 25 ? "selected" : "")>25</option>
                        <option value="50" @(Model.Filter.PageSize == 50 ? "selected" : "")>50</option>
                    </select>
                </div>

                <div class="col-12">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label">Created From</label>
                            <input type="date" name="CreatedFrom" class="form-control"
                                   value="@(Model.Filter.CreatedFrom?.ToString("yyyy-MM-dd"))">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Created To</label>
                            <input type="date" name="CreatedTo" class="form-control"
                                   value="@(Model.Filter.CreatedTo?.ToString("yyyy-MM-dd"))">
                        </div>
                        <div class="col-md-6 d-flex align-items-end">
                            <div class="btn-group">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search"></i> Apply Filters
                                </button>
                                <button type="button" class="btn btn-secondary" onclick="resetFilters()">
                                    <i class="fas fa-undo"></i> Reset
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Subject</th>
                            <th>Description</th>
                            <th>Status</th>
                            <th>Last Modified</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var template in Model.Templates)
                        {
                            <tr>
                                <td>@template.Name</td>
                                <td>@template.Subject</td>
                                <td>
                                    <small class="text-muted">@(template.Description ?? "-")</small>
                                </td>
                                <td>
                                    @if (template.IsDefault)
                                    {
                                        <span class="badge bg-success">Default</span>
                                    }
                                </td>
                                <td>
                                    <small>
                                        @(template.LastModifiedAt?.ToString("g") ?? template.CreatedAt.ToString("g"))
                                    </small>
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <a asp-action="Preview" asp-route-id="@template.Id" 
                                           class="btn btn-sm btn-info">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@template.Id" 
                                           class="btn btn-sm btn-primary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-danger"
                                                onclick="confirmDelete(@template.Id, '@template.Name')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.TotalPages > 1)
            {
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div>
                        Showing @(((Model.Filter.PageNumber - 1) * Model.Filter.PageSize) + 1) to 
                        @(Math.Min(Model.Filter.PageNumber * Model.Filter.PageSize, Model.TotalItems)) of 
                        @Model.TotalItems items
                    </div>
                    <nav>
                        <ul class="pagination mb-0">
                            @for (var i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Filter.PageNumber ? "active" : "")">
                                    <a class="page-link" href="#" onclick="changePage(@i)">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
        </div>
    </div>
</div>

<form id="deleteForm" asp-action="Delete" method="post">
    <input type="hidden" id="templateId" name="id" />
</form>

@section Scripts {
    <script>
        function confirmDelete(id, name) {
            if (confirm(`Are you sure you want to delete the template "${name}"?`)) {
                document.getElementById('templateId').value = id;
                document.getElementById('deleteForm').submit();
            }
        }

        function changePage(page) {
            const form = document.getElementById('filterForm');
            const pageInput = document.createElement('input');
            pageInput.type = 'hidden';
            pageInput.name = 'PageNumber';
            pageInput.value = page;
            form.appendChild(pageInput);
            form.submit();
        }

        function resetFilters() {
            window.location = window.location.pathname;
        }

        // Persist filters in URL
        document.getElementById('filterForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            const params = new URLSearchParams();
            
            for (let pair of formData.entries()) {
                if (pair[1]) {
                    params.append(pair[0], pair[1]);
                }
            }
            
            window.location = `${window.location.pathname}?${params.toString()}`;
        });
    </script>
}